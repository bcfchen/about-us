// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BlogPage on load should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BlogPage
    blogActions={
        Object {
            "searchPostByText": [Function],
          }
    }
    nextButtonActive={true}
    posts={Array []}
    prevButtonActive={true}
    searchText=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <BlogSearch
          onSearch={[Function]}
          searchText=""
/>,
        <WithStyles(BlogPostList)
          isLoading={true}
          postsToRender={Array []}
/>,
        <div
          className="btns-container"
>
          <WithStyles(Button)
                    className="prev-btn"
                    disabled={false}
                    onClick={undefined}
                    variant="contained"
          >
                    Prev
          </WithStyles(Button)>
          <WithStyles(Button)
                    className="next-btn"
                    disabled={false}
                    onClick={undefined}
                    variant="contained"
          >
                    Next
          </WithStyles(Button)>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onSearch": [Function],
          "searchText": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "isLoading": true,
          "postsToRender": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Button)
              className="prev-btn"
              disabled={false}
              onClick={undefined}
              variant="contained"
>
              Prev
</WithStyles(Button)>,
            <WithStyles(Button)
              className="next-btn"
              disabled={false}
              onClick={undefined}
              variant="contained"
>
              Next
</WithStyles(Button)>,
          ],
          "className": "btns-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Prev",
              "className": "prev-btn",
              "disabled": false,
              "onClick": undefined,
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Prev",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Next",
              "className": "next-btn",
              "disabled": false,
              "onClick": undefined,
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Next",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <BlogSearch
            onSearch={[Function]}
            searchText=""
/>,
          <WithStyles(BlogPostList)
            isLoading={true}
            postsToRender={Array []}
/>,
          <div
            className="btns-container"
>
            <WithStyles(Button)
                        className="prev-btn"
                        disabled={false}
                        onClick={undefined}
                        variant="contained"
            >
                        Prev
            </WithStyles(Button)>
            <WithStyles(Button)
                        className="next-btn"
                        disabled={false}
                        onClick={undefined}
                        variant="contained"
            >
                        Next
            </WithStyles(Button)>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onSearch": [Function],
            "searchText": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "isLoading": true,
            "postsToRender": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Button)
                className="prev-btn"
                disabled={false}
                onClick={undefined}
                variant="contained"
>
                Prev
</WithStyles(Button)>,
              <WithStyles(Button)
                className="next-btn"
                disabled={false}
                onClick={undefined}
                variant="contained"
>
                Next
</WithStyles(Button)>,
            ],
            "className": "btns-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Prev",
                "className": "prev-btn",
                "disabled": false,
                "onClick": undefined,
                "variant": "contained",
              },
              "ref": null,
              "rendered": "Prev",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Next",
                "className": "next-btn",
                "disabled": false,
                "onClick": undefined,
                "variant": "contained",
              },
              "ref": null,
              "rendered": "Next",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
