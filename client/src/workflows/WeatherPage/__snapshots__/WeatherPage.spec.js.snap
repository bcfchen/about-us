// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WeatherPage on load should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WeatherPage
    currentLocation={
        Location {
            "city": "city",
            "country": "country",
            "key": "key",
            "region": "region",
          }
    }
    fiveDayForecasts={Array []}
    hourlyForecasts={Array []}
    isLoading={false}
    locationActions={
        Object {
            "loadCurrentLocation": [Function],
            "updateCurrentLocation": [Function],
          }
    }
    weatherActions={
        Object {
            "loadCurrentLocationHourlyForecasts": [Function],
            "loadFiveDayForecasts": [Function],
            "loadHourlyForecasts": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ReactPullToRefresh
        onRefresh={[Function]}
>
        <div
                className=""
        >
                <WithStyles(LocationSearch)
                        currentLocation={
                                Location {
                                        "city": "city",
                                        "country": "country",
                                        "key": "key",
                                        "region": "region",
                                      }
                        }
                        onLocationSelected={[Function]}
                />
                <CurrentWeatherIndicator
                        currentHourlyForecast={undefined}
                        isLoading={false}
                />
                <WeatherDetails
                        currentHourlyForecast={undefined}
                        isLoading={false}
                />
                <WeatherChart
                        hourlyForecasts={Array []}
                        isLoading={false}
                />
                <WeatherForecastList
                        isLoading={false}
                        weatherForecasts={Array []}
                />
        </div>
</ReactPullToRefresh>,
      "className": "weather-body",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          false,
          <div
            className=""
>
            <WithStyles(LocationSearch)
                        currentLocation={
                                    Location {
                                                "city": "city",
                                                "country": "country",
                                                "key": "key",
                                                "region": "region",
                                              }
                        }
                        onLocationSelected={[Function]}
            />
            <CurrentWeatherIndicator
                        currentHourlyForecast={undefined}
                        isLoading={false}
            />
            <WeatherDetails
                        currentHourlyForecast={undefined}
                        isLoading={false}
            />
            <WeatherChart
                        hourlyForecasts={Array []}
                        isLoading={false}
            />
            <WeatherForecastList
                        isLoading={false}
                        weatherForecasts={Array []}
            />
</div>,
        ],
        "onRefresh": [Function],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(LocationSearch)
                currentLocation={
                                Location {
                                                "city": "city",
                                                "country": "country",
                                                "key": "key",
                                                "region": "region",
                                              }
                }
                onLocationSelected={[Function]}
/>,
              <CurrentWeatherIndicator
                currentHourlyForecast={undefined}
                isLoading={false}
/>,
              <WeatherDetails
                currentHourlyForecast={undefined}
                isLoading={false}
/>,
              <WeatherChart
                hourlyForecasts={Array []}
                isLoading={false}
/>,
              <WeatherForecastList
                isLoading={false}
                weatherForecasts={Array []}
/>,
            ],
            "className": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "currentLocation": Location {
                  "city": "city",
                  "country": "country",
                  "key": "key",
                  "region": "region",
                },
                "onLocationSelected": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "currentHourlyForecast": undefined,
                "isLoading": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "currentHourlyForecast": undefined,
                "isLoading": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "hourlyForecasts": Array [],
                "isLoading": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "isLoading": false,
                "weatherForecasts": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ReactPullToRefresh
          onRefresh={[Function]}
>
          <div
                    className=""
          >
                    <WithStyles(LocationSearch)
                              currentLocation={
                                        Location {
                                                  "city": "city",
                                                  "country": "country",
                                                  "key": "key",
                                                  "region": "region",
                                                }
                              }
                              onLocationSelected={[Function]}
                    />
                    <CurrentWeatherIndicator
                              currentHourlyForecast={undefined}
                              isLoading={false}
                    />
                    <WeatherDetails
                              currentHourlyForecast={undefined}
                              isLoading={false}
                    />
                    <WeatherChart
                              hourlyForecasts={Array []}
                              isLoading={false}
                    />
                    <WeatherForecastList
                              isLoading={false}
                              weatherForecasts={Array []}
                    />
          </div>
</ReactPullToRefresh>,
        "className": "weather-body",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            false,
            <div
              className=""
>
              <WithStyles(LocationSearch)
                            currentLocation={
                                          Location {
                                                        "city": "city",
                                                        "country": "country",
                                                        "key": "key",
                                                        "region": "region",
                                                      }
                            }
                            onLocationSelected={[Function]}
              />
              <CurrentWeatherIndicator
                            currentHourlyForecast={undefined}
                            isLoading={false}
              />
              <WeatherDetails
                            currentHourlyForecast={undefined}
                            isLoading={false}
              />
              <WeatherChart
                            hourlyForecasts={Array []}
                            isLoading={false}
              />
              <WeatherForecastList
                            isLoading={false}
                            weatherForecasts={Array []}
              />
</div>,
          ],
          "onRefresh": [Function],
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(LocationSearch)
                  currentLocation={
                                    Location {
                                                      "city": "city",
                                                      "country": "country",
                                                      "key": "key",
                                                      "region": "region",
                                                    }
                  }
                  onLocationSelected={[Function]}
/>,
                <CurrentWeatherIndicator
                  currentHourlyForecast={undefined}
                  isLoading={false}
/>,
                <WeatherDetails
                  currentHourlyForecast={undefined}
                  isLoading={false}
/>,
                <WeatherChart
                  hourlyForecasts={Array []}
                  isLoading={false}
/>,
                <WeatherForecastList
                  isLoading={false}
                  weatherForecasts={Array []}
/>,
              ],
              "className": "",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "currentLocation": Location {
                    "city": "city",
                    "country": "country",
                    "key": "key",
                    "region": "region",
                  },
                  "onLocationSelected": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "currentHourlyForecast": undefined,
                  "isLoading": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "currentHourlyForecast": undefined,
                  "isLoading": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "hourlyForecasts": Array [],
                  "isLoading": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "isLoading": false,
                  "weatherForecasts": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
